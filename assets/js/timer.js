// Generated by CoffeeScript 1.10.0
(function() {
  var AnimationTimer, IntervalTimer, Timer;

  Timer = (function() {
    function Timer(time, cbk, autostart) {
      this.time = time || 1000;
      this._cbk = cbk;
      this._hdl = null;
      if (autostart) {
        this.start();
      }
    }

    Timer.prototype.start = function() {
      if (this._hdl) {
        clearTimeout(this._hdl);
      }
      return this._hdl = setTimeout(this._cbk, this.time);
    };

    Timer.prototype.cancel = function() {
      if (this._hdl) {
        clearTimeout(this._hdl);
        return this._hdl = null;
      }
    };

    Timer.prototype.restart = function() {
      this.cancel();
      return this.start();
    };

    return Timer;

  })();

  IntervalTimer = (function() {
    function IntervalTimer(time, cbk, autostart) {
      this.time = time || 1000;
      this._cbk = cbk;
      this._hdl = null;
      if (autostart) {
        this.start();
      }
    }

    IntervalTimer.prototype.start = function() {
      if (this._hdl) {
        clearInterval(this._hdl);
      }
      return this._hdl = setInterval(this._cbk, this.time);
    };

    IntervalTimer.prototype.cancel = function() {
      if (this._hdl) {
        clearInterval(this._hdl);
        return this._hdl = null;
      }
    };

    IntervalTimer.prototype.restart = function() {
      this.cancel();
      return this.start();
    };

    return IntervalTimer;

  })();

  AnimationTimer = (function() {
    function AnimationTimer(duration, cbk, autostart) {
      this.duration = duration || 1000;
      this._cbk = cbk;
      this._startTime = null;
      if (autostart) {
        this.start();
      }
    }

    AnimationTimer.prototype.start = function() {
      var func;
      this._startTime = null;
      func = (function(_this) {
        return function(timestamp) {
          if (_this._startTime === null) {
            _this._startTime = timestamp;
          }
          if (timestamp - _this._startTime <= _this.duration) {
            _this._cbk((timestamp - _this._startTime) / _this.duration, timestamp);
            return window.requestAnimationFrame(func);
          } else {
            return _this._endCbk();
          }
        };
      })(this);
      return window.requestAnimationFrame(func);
    };

    AnimationTimer.prototype.stop = function() {
      return this._startTime = this.duration + 1;
    };

    AnimationTimer.prototype.onEnd = function(cbk) {
      return this._endCbk = cbk;
    };

    AnimationTimer.prototype.restart = function() {
      this.stop();
      return this.start();
    };

    return AnimationTimer;

  })();

  window.Timer = Timer;

  window.IntervalTimer = IntervalTimer;

  window.AnimationTimer = AnimationTimer;

}).call(this);
